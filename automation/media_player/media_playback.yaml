- id: movie_on
  alias: 'Playing Movie'
  trigger:
  - platform: state
    entity_id: media_player.kodishieldtv
    from: 'idle'
    to: 'playing'
  - platform: state
    entity_id: media_player.kodishieldtv
    from: 'paused'
    to: 'playing'
  - platform: state
    entity_id: media_player.plexkodiconnect
    from: 'idle'
    to: 'playing'
  - platform: state
    entity_id: sensor.living_room_tv_source
    to: 'Netflix'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: group.living_room_lights
    state: 'on'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ states.media_player.kodishieldtv.attributes.media_content_type == "tvshow" }}'
    - condition: template
      value_template: '{{ states.media_player.kodishieldtv.attributes.media_content_type == "movie" }}'
    - condition: template
      value_template: '{{ states.media_player.plexkodiconnect.attributes.media_content_type == "movie" }}'
    - condition: template
      value_template: '{{ states.media_player.plexkodiconnect.attributes.media_content_type == "tvshow" }}'
    - condition: template
      value_template: '{{ states.media_player.living_room_tv.attributes.source == "Netflix" }}'
  action:
  - service: scene.turn_on
    entity_id: scene.watch_movie
  # - service: switch.turn_off
    # entity_id: switch.fluxer
    
- id: movie_paused
  alias: 'Playing Movie Paused'
  trigger:
  - platform: state
    entity_id: media_player.kodishieldtv
    from: 'playing'
    to: 'paused'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: group.living_room_lights
    state: 'on'
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ states.media_player.kodishieldtv.attributes.media_content_type == "tvshow" }}'
    - condition: template
      value_template: '{{ states.media_player.kodishieldtv.attributes.media_content_type == "movie" }}'
  action:
  - service: scene.turn_on
    entity_id: scene.default
  # - service: switch.turn_off
    # entity_id: switch.fluxer
      
- id: movie_off
  alias: 'Playing Movie Stopped'
  trigger:
  - platform: state
    entity_id: media_player.kodishieldtv
    from: 'playing'
    to: 'idle'
  - platform: state
    entity_id: sensor.living_room_tv_source
    from: 'Netflix'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: group.living_room_lights
    state: 'on'
  action:
  - service: scene.turn_on
    entity_id: scene.default
  # - service: switch.turn_on
    # entity_id: switch.fluxer
    
- id: bluetoot_sound_on
  alias: 'Turn on sound via bluetooth'
  trigger:
  - platform: state
    entity_id: sensor.living_room_tv_source
    to: 'Netflix'
  - platform: state
    entity_id: sensor.living_room_tv_source
    to: 'Live TV'
  - platform: state
    entity_id: sensor.living_room_tv_source
    to: 'YouTube'
  - platform: state
    entity_id: media_player.living_room_tv
    to: 'off'
  action:
  - service: switch.turn_on
    entity_id: switch.bluetooth_shield
   
- id: bluetooth_sound_off
  alias: 'Turn off sound via bluetooth'
  trigger:
  - platform: state
    entity_id: sensor.living_room_tv_source
    to: 'Shield TV'
  action:
  - service: switch.turn_off
    entity_id: switch.bluetooth_shield